%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./1node_write_diff.eps
%%Creator: gnuplot 5.2 patchlevel 8
%%CreationDate: Mon Jan 11 22:27:18 2021
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded true def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 20.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./1node_write_diff.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 8)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jan 11 22:27:18 2021)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTa
0.50 0.50 0.50 C
770 448 M
6177 0 V
stroke
LTb
0.50 0.50 0.50 C
770 448 M
63 0 V
stroke
686 448 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTa
0.50 0.50 0.50 C
770 979 M
6177 0 V
stroke
LTb
0.50 0.50 0.50 C
770 979 M
63 0 V
stroke
686 979 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 500)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTa
0.50 0.50 0.50 C
770 1511 M
6177 0 V
stroke
LTb
0.50 0.50 0.50 C
770 1511 M
63 0 V
stroke
686 1511 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1000)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTa
0.50 0.50 0.50 C
770 2042 M
6177 0 V
stroke
LTb
0.50 0.50 0.50 C
770 2042 M
63 0 V
stroke
686 2042 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1500)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTa
0.50 0.50 0.50 C
770 2574 M
6177 0 V
stroke
LTb
0.50 0.50 0.50 C
770 2574 M
63 0 V
stroke
686 2574 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2000)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTa
0.50 0.50 0.50 C
770 3105 M
6177 0 V
stroke
LTb
0.50 0.50 0.50 C
770 3105 M
63 0 V
stroke
686 3105 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2500)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTa
0.50 0.50 0.50 C
770 3636 M
6177 0 V
stroke
LTb
0.50 0.50 0.50 C
770 3636 M
63 0 V
stroke
686 3636 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3000)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTa
0.50 0.50 0.50 C
770 4168 M
6177 0 V
stroke
LTb
0.50 0.50 0.50 C
770 4168 M
63 0 V
stroke
686 4168 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3500)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTa
0.50 0.50 0.50 C
770 4699 M
6177 0 V
stroke
LTb
0.50 0.50 0.50 C
770 4699 M
63 0 V
stroke
686 4699 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4000)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTa
0.50 0.50 0.50 C
770 448 M
0 4251 V
stroke
LTb
0.50 0.50 0.50 C
770 448 M
0 63 V
stroke
770 308 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTa
0.50 0.50 0.50 C
6947 448 M
0 4251 V
stroke
LTb
0.50 0.50 0.50 C
6947 448 M
0 63 V
stroke
6947 308 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.50 0.50 0.50 C
1.000 UL
LTB
0.50 0.50 0.50 C
770 4699 M
770 448 L
6177 0 V
0 4251 R
-6177 0 R
1.000 UP
stroke
LTb
0.50 0.50 0.50 C
LCb setrgbcolor
133 2573 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Latency\(ns\))]
] -66.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
3858 98 M
[ [(Helvetica) 200.0 0.0 true true 0 (Pass)]
] -66.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.63 0.00 0.00 C
LCb setrgbcolor
2295 4877 M
[ [(Helvetica) 200.0 0.0 true true 0 (1node write)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.63 0.00 0.00 C
852 4877 M
123 0 V
770 737 M
62 286 V
62 703 V
61 -661 V
62 -343 V
62 -5 V
62 11 V
61 -7 V
62 2 V
62 1 V
62 -8 V
61 2 V
62 25 V
62 4 V
62 -15 V
62 10 V
61 3 V
62 -23 V
62 0 V
62 347 V
61 2135 V
62 -92 V
62 -120 V
62 36 V
61 -352 V
62 48 V
62 -460 V
62 704 V
62 48 V
61 -782 V
62 450 V
62 334 V
62 -112 V
61 -445 V
62 616 V
62 -456 V
62 -474 V
61 311 V
62 174 V
62 -247 V
62 -73 V
62 338 V
61 -55 V
62 -82 V
62 -73 V
62 200 V
61 386 V
62 -476 V
62 -491 V
62 940 V
62 -379 V
61 218 V
62 -537 V
62 160 V
62 83 V
61 174 V
62 -209 V
62 252 V
62 -250 V
61 59 V
62 -342 V
62 217 V
62 -602 V
62 765 V
61 0 V
62 27 V
62 141 V
62 -212 V
61 89 V
62 -160 V
62 73 V
62 -3 V
61 139 V
62 -49 V
62 345 V
62 -392 V
62 118 V
61 -165 V
62 104 V
62 57 V
62 -81 V
61 -1339 V
62 239 V
62 1355 V
62 -135 V
61 309 V
62 -140 V
62 -74 V
62 13 V
62 374 V
61 -160 V
62 106 V
62 -339 V
62 130 V
61 261 V
62 -444 V
62 24 V
62 -46 V
61 100 V
62 -122 V
914 4877 Pnt
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.63 0.00 C
LCb setrgbcolor
3858 4877 M
[ [(Helvetica) 200.0 0.0 true true 0 (2node write)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.00 0.63 0.00 C
2415 4877 M
123 0 V
770 731 M
62 310 V
62 1162 V
955 1074 L
62 -359 V
62 4 V
62 4 V
61 -5 V
62 7 V
62 -4 V
62 7 V
61 -13 V
62 53 V
62 -28 V
62 11 V
62 -18 V
61 19 V
62 -29 V
62 1 V
62 395 V
61 2071 V
62 -171 V
62 368 V
62 -91 V
61 -314 V
62 -402 V
62 -517 V
62 759 V
62 -91 V
61 -58 V
62 597 V
62 -655 V
62 -840 V
61 822 V
62 -4 V
62 377 V
62 -338 V
61 69 V
62 0 V
62 -256 V
62 -203 V
62 657 V
61 -285 V
62 36 V
62 -8 V
62 148 V
61 435 V
62 -808 V
62 -247 V
62 347 V
62 -172 V
61 -175 V
62 301 V
62 576 V
62 -407 V
61 -328 V
62 288 V
62 -231 V
62 556 V
61 -300 V
62 -251 V
62 461 V
62 -564 V
62 356 V
61 835 V
62 -812 V
62 -323 V
62 549 V
61 3 V
62 -523 V
62 656 V
62 -868 V
61 669 V
62 89 V
62 -42 V
62 81 V
62 -1355 V
61 1312 V
62 -55 V
62 -191 V
62 7 V
61 -164 V
62 462 V
62 37 V
62 -36 V
61 -49 V
62 -91 V
62 24 V
62 -220 V
62 -6 V
61 13 V
62 418 V
62 239 V
62 -433 V
61 52 V
62 -225 V
62 244 V
62 -413 V
61 -181 V
62 603 V
2477 4877 Pnt
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.31 0.38 0.82 C
LCb setrgbcolor
5421 4877 M
[ [(Helvetica) 200.0 0.0 true true 0 (3node write)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.31 0.38 0.82 C
3978 4877 M
123 0 V
770 747 M
62 309 V
62 728 V
61 -720 V
62 -347 V
62 4 V
62 9 V
61 -9 V
62 13 V
62 -9 V
62 -1 V
61 -8 V
62 56 V
62 -37 V
62 6 V
62 5 V
61 18 V
62 -44 V
62 9 V
62 336 V
61 1667 V
62 233 V
62 -312 V
62 613 V
61 -658 V
62 -79 V
62 -224 V
62 266 V
62 229 V
61 -293 V
62 -354 V
62 666 V
62 -890 V
61 629 V
62 206 V
62 86 V
62 -576 V
61 -65 V
62 404 V
62 -217 V
62 -489 V
62 809 V
61 -228 V
62 218 V
62 -495 V
62 536 V
61 -16 V
62 -560 V
62 954 V
62 -582 V
62 -49 V
61 -9 V
62 -381 V
62 576 V
62 -941 V
61 854 V
62 -363 V
62 19 V
62 185 V
61 -210 V
62 806 V
62 345 V
62 -1433 V
62 -522 V
61 118 V
62 1054 V
62 226 V
62 66 V
61 127 V
62 -457 V
62 164 V
62 114 V
61 173 V
62 200 V
62 -340 V
62 -240 V
62 -205 V
61 872 V
62 -224 V
62 -405 V
62 17 V
61 683 V
62 -387 V
62 -125 V
62 -36 V
61 207 V
62 482 V
62 -835 V
62 89 V
62 -277 V
61 252 V
62 58 V
62 -6 V
62 -90 V
61 451 V
62 -431 V
62 237 V
62 -393 V
61 13 V
62 160 V
4040 4877 Pnt
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LTb
1.00 0.55 0.00 C
LCb setrgbcolor
6984 4877 M
[ [(Helvetica) 200.0 0.0 true true 0 (4node write)]
] -66.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
1.00 0.55 0.00 C
5541 4877 M
123 0 V
770 745 M
62 328 V
62 1185 V
955 1058 L
62 -332 V
62 2 V
62 -5 V
61 0 V
62 0 V
62 2 V
62 -3 V
61 0 V
62 52 V
62 -18 V
62 -2 V
62 -9 V
61 32 V
62 -48 V
62 -6 V
62 361 V
61 1872 V
62 222 V
62 -311 V
62 -67 V
61 10 V
62 -461 V
62 -414 V
62 532 V
62 540 V
61 -251 V
62 -236 V
62 447 V
62 -863 V
61 657 V
62 47 V
62 33 V
62 -296 V
61 522 V
62 -199 V
62 -483 V
62 61 V
62 -919 V
61 1358 V
62 -200 V
62 -96 V
62 398 V
61 137 V
62 13 V
62 150 V
62 -899 V
62 367 V
61 346 V
62 -784 V
62 304 V
62 -794 V
61 1047 V
62 -319 V
62 1854 V
62 -1561 V
61 146 V
62 -591 V
62 257 V
62 -660 V
62 737 V
61 -486 V
62 295 V
62 538 V
62 -33 V
61 -100 V
62 -677 V
62 268 V
62 -7 V
61 238 V
62 276 V
62 407 V
62 -546 V
62 -126 V
61 -14 V
62 -260 V
62 726 V
62 -456 V
61 22 V
62 -186 V
62 -66 V
62 90 V
61 210 V
62 -246 V
62 -32 V
62 124 V
62 -201 V
61 32 V
62 519 V
62 -599 V
62 114 V
61 138 V
62 142 V
62 -100 V
62 -415 V
61 327 V
62 -26 V
770 745 Box
832 1073 Box
894 2258 Box
955 1058 Box
1017 726 Box
1079 728 Box
1141 723 Box
1202 723 Box
1264 723 Box
1326 725 Box
1388 722 Box
1449 722 Box
1511 774 Box
1573 756 Box
1635 754 Box
1697 745 Box
1758 777 Box
1820 729 Box
1882 723 Box
1944 1084 Box
2005 2956 Box
2067 3178 Box
2129 2867 Box
2191 2800 Box
2252 2810 Box
2314 2349 Box
2376 1935 Box
2438 2467 Box
2500 3007 Box
2561 2756 Box
2623 2520 Box
2685 2967 Box
2747 2104 Box
2808 2761 Box
2870 2808 Box
2932 2841 Box
2994 2545 Box
3055 3067 Box
3117 2868 Box
3179 2385 Box
3241 2446 Box
3303 1527 Box
3364 2885 Box
3426 2685 Box
3488 2589 Box
3550 2987 Box
3611 3124 Box
3673 3137 Box
3735 3287 Box
3797 2388 Box
3859 2755 Box
3920 3101 Box
3982 2317 Box
4044 2621 Box
4106 1827 Box
4167 2874 Box
4229 2555 Box
4291 4409 Box
4353 2848 Box
4414 2994 Box
4476 2403 Box
4538 2660 Box
4600 2000 Box
4662 2737 Box
4723 2251 Box
4785 2546 Box
4847 3084 Box
4909 3051 Box
4970 2951 Box
5032 2274 Box
5094 2542 Box
5156 2535 Box
5217 2773 Box
5279 3049 Box
5341 3456 Box
5403 2910 Box
5465 2784 Box
5526 2770 Box
5588 2510 Box
5650 3236 Box
5712 2780 Box
5773 2802 Box
5835 2616 Box
5897 2550 Box
5959 2640 Box
6020 2850 Box
6082 2604 Box
6144 2572 Box
6206 2696 Box
6268 2495 Box
6329 2527 Box
6391 3046 Box
6453 2447 Box
6515 2561 Box
6576 2699 Box
6638 2841 Box
6700 2741 Box
6762 2326 Box
6823 2653 Box
6885 2627 Box
5603 4877 Box
% End plot #4
2.000 UL
LTb
LCb setrgbcolor
1.000 UP
1.000 UL
LTb
0.50 0.50 0.50 C
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
